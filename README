README

    BlazeShow Editor - Modular LED Animations
    Copyright 2010 Projects and Stuff, LLC

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.


    Projects and Stuff, LLC
    Website: http://www.projectsandstuff.com
    Support: support@projectsandstuff.com

=========================================================================

BlazeShow Version 0

=========================================================================

- Blazeshow is a set of opensource software and hardware for designing animated LED displays for signs, art installations, decorative tables, and more.
- Blazeshow Editor is the software tool used to design LED animations. BlazeShow Editor uses C++ and Qt 4.7, and will be freely available for Windows, Linux, and Mac OS X. It is free software licensed under GPL 3.0.


The project involves modular LED boards using either the TLC5940 LED current-sink chip, or similar chips. These chips use serial data to drive LEDs, and offer features like PWM and grayscale for each LED.


The main output of the Editor code for animation effects with LEDs. Suggested code outputs include:
- C code for AVR using TLC5940/5941/5944/5945 (16 output) or TLC5947/4951/4952 (24 output)
- C code for PIC using TLC5940/5941/5944/5945 (16 output) or TLC5947/4951/4952 (24 output)
- Processing code for Arduino using TLC5940/5941/5944/5945 (16 output) or TLC5947/4951/4952 (24 output)

Documentation for the 16 and 24 output LED Drivers can be found at:
http://focus.ti.com/docs/prod/folders/print/tlc5940.html
http://focus.ti.com/docs/prod/folders/print/tlc5947.html


Hardware modules generally consist of a printed circuit board with an LED driver, connectors, and LEDs (though it might only contain headers for external LEDs). Modules can be daisy-chained to allow for large displays of many LEDs.

Users will be able to draw and use modules in BlazeShow Editor. Users should also be able to draw and define a module as a component to be used in other modules. This includes things like commercial connectors, headers, LEDs (5mm, 3mm, rectangle, etc). They should also be able to define how these components are connected together.

Users should be able to create a single animation, multiple animations or small loops, or a sequential animation A sequential animation involves the user selecting one or more LEDs in the project, and then performing one of a variety of actions Either turning on and off each led in sequence, turning on each led in sequence, etc


If a module is an LED, it should have two or more [connection] points. If more than two connection points, it should also have wires as needed. RGB LEDs should be a single component module with up to 3 inputs and 3 outputs, depending on common anode or all individual wires. Use the characteristics of the RGB LED to determine the resulting color as adjustments are made.

When a module is defined to be an LED, it's fill_on_color property will be present (see mod_define.xml for initial design specs). If using the TLC5940, or other similar drivers with grayscale capability, use variations from fill_color to fill_on_color. fill_on_color should always be a primary color to ensure proper emulation of grayscaled colors.


Modules and Projects are saved as XML-based files. module.xsd is the schema definition for modules, and project.xsd is the schema definition for project files.

=========================================================================
Some information about the tools and resources used in this project:
Programming Language:		C++
IDE and Framework used: 	Trolltech Qt Open Source version 4.7.0
							http://qt.nokia.com/products/
File Editor					Notepad++
							http://notepad-plus-plus.org/
Open Source Icon source:	Open Icon Library
							http://openiconlibrary.sourceforge.net/
XML Schema Documenter		xnsdoc (Open Source License)
							http://buldocs.com/xnsdoc/
GIT Tools					GitHub
							http://github.com/
							TortoiseGit
							http://code.google.com/p/tortoisegit/downloads/list
							msysgit
							http://code.google.com/p/msysgit/downloads/list
							Sparkfun Windows GitHub tutorial
							http://sparkfun.com/commerce/tutorial_info.php?tutorials_id=165
=========================================================================

